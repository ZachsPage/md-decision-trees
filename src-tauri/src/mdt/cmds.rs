// These commands are exposed to the frontend by autogenerated in ui/bindings/bindings.ts
// - Ensure to export them in main.rs - TODO - make a pub fn here like `export_all_cmds`
// - Learn more about Tauri commands at https://tauri.app/v1/guides/features/command
pub mod cmds {

use super::structs::Nodes;
use super::file_parse::{parse_file, DATA_DIR};
use super::file_write::{write_nodes_to_file};

use std::path::PathBuf;

/// Gets path from string after checking if the frontend wants a TEST_FILE instead
fn get_path_from_string(file_path: String) -> PathBuf {
    let test_file_prefix_size = 10; 
    match file_path.get(..test_file_prefix_size) {
        Some("TEST_FILE:") => return DATA_DIR.join(String::from(&file_path[test_file_prefix_size..])),
        _ => return PathBuf::from(file_path)
    };
}

#[tauri::command]
#[specta::specta]
pub fn get_nodes(file_path: String) -> Result<Nodes, String> {
    return Ok(parse_file(get_path_from_string(file_path)).map_err(|err| err.to_string())?);
}

#[tauri::command]
#[specta::specta]
pub fn send_nodes(nodes: Nodes, file_path: String) -> Result<(), String> {
    return Ok(write_nodes_to_file(nodes, get_path_from_string(file_path)).map_err(|err| err.to_string())?);
}

}